# Generated by Django 5.2.6 on 2025-10-01 20:30

from django.db import migrations, transaction


def cleanup_duplicate_guest_sessions_before_unique(apps, schema_editor):
    """Supprime les sessions invités en double AVANT d'appliquer la contrainte unique"""
    GuestSession = apps.get_model('accounts', 'GuestSession')
    
    with transaction.atomic():
        # Récupérer toutes les IPs avec plusieurs sessions
        from django.db.models import Count
        duplicate_ips = GuestSession.objects.values('ip_address').annotate(count=Count('ip_address')).filter(count__gt=1)
        
        for item in duplicate_ips:
            ip = item['ip_address']
            # Garder la session la plus récente, supprimer les autres
            sessions = GuestSession.objects.filter(ip_address=ip).order_by('-created_at')
            sessions_to_delete = sessions[1:]  # Toutes sauf la première (plus récente)
            for session in sessions_to_delete:
                print(f'Suppression session {session.session_id} pour IP {ip}')
                session.delete()


def reverse_cleanup(apps, schema_editor):
    """Opération inverse - ne fait rien car on ne peut pas restaurer les données supprimées"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0013_remove_guestsession_accounts_gu_ip_addr_36385c_idx_and_more'),
    ]

    operations = [
        migrations.RunPython(cleanup_duplicate_guest_sessions_before_unique, reverse_cleanup),
    ]
