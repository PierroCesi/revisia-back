# Generated by Django 5.2.6 on 2025-10-04 21:17

from django.db import migrations, models


def clean_stripe_customer_ids(apps, schema_editor):
    """Nettoie les stripe_customer_id en doublon avant de retirer la contrainte unique"""
    User = apps.get_model('accounts', 'User')
    
    # Trouver tous les utilisateurs avec des stripe_customer_id vides ou None
    users_with_empty_customer_id = User.objects.filter(
        models.Q(stripe_customer_id__isnull=True) | 
        models.Q(stripe_customer_id='')
    )
    
    # Mettre tous les stripe_customer_id vides à None
    users_with_empty_customer_id.update(stripe_customer_id=None)
    
    print(f"✅ Nettoyé {users_with_empty_customer_id.count()} utilisateurs avec stripe_customer_id vide")


def reverse_clean_stripe_customer_ids(apps, schema_editor):
    """Opération inverse - ne fait rien car on ne peut pas restaurer les valeurs vides"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0023_alter_user_stripe_customer_id'),
    ]

    operations = [
        migrations.RunPython(clean_stripe_customer_ids, reverse_clean_stripe_customer_ids),
    ]
